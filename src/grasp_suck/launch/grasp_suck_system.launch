<?xml version="1.0"?>
<launch>
  <?ignore
  <!-- SR300 -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
    <arg name="camera" value="camera1"/>
  </include>
  <!-- UR5 -->
  <include file="$(find arm_operation)/launch/ur5_real.launch">
    <arg name="robot_ip" value="192.168.50.11"/>
    <arg name="tool_length" value="0.0"/>
  </include>
  ?>
  <arg name="use_ft" default="false" doc="Whether turn on force torch sensor"/>
  <arg name="empty_thres" default="0" doc="If points in given range is greater than this threshold, the workspace will be considered as non-empty"/>
  <arg name="move_thres" default="300" doc="If difference between two consecutive depth heightmaps is greater than this value, the action(suck) will be consider as success"/>
  <!-- TCP information -->
  <include file="$(find arm_operation)/launch/tcp_publisher.launch"/>
  <!-- Vacuum -->
  <node pkg="vacuum_conveyor_control" type="arduino_control" name="arduino_control" output="screen" clear_params="true" required="true">
    <param name="port" value="/dev/ttyArduino"/>
  </node>
  <!-- robotiq 2-finger gripper -->
  <node pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" name="robotiq2FGripper" args="/dev/ttyGripper" required="true"/>
  <!-- robotiq gripper control -->
  <node pkg="grasp_suck" type="robotiq_gripper_control" name="robotiq_finger_control_node" output="screen" required="true"/>
  <!-- Visual System -->
  <!-- Convert pointcloud from eye coord. to hand coord. -->
  <node pkg="visual_system" type="pc_transform" name="pc_transform" output="screen" required="true">
    <param name="verbose" value="true"/>
    <param name="num_thres" value="$(arg empty_thres)"/>
    <remap from="camera/color/image_raw" to="/camera1/color/image_raw"/>
    <remap from="camera/aligned_depth_to_color/image_raw" to="/camera1/aligned_depth_to_color/image_raw"/>
    <remap from="camera/color/camera_info" to="/camera1/color/camera_info"/>
  </node>
  <!-- Get reward based on consecutive depth images -->
  <!--node pkg="grasp_suck" type="get_reward" name="get_reward" output="screen" required="true">
    <param name="thres" value="$(arg move_thres)"/>
  </node--> 
  <!-- High-level Control -->
  <include file="$(find grasp_suck)/launch/helper_services.launch"/> 
  <node pkg="robotiq_ft_sensor" type="rq_sensor" name="rq_sensor" output="screen" if="$(arg use_ft)">
    <param name="serial_id" value="ttyFT"/>
  </node>
  <!-- Visualization -->
  <node pkg="visualization" type="viz_boundary.py" name="viz_boundary_node"/>
  <node pkg="visualization" type="viz_marker.py" name="viz_marker_node"/>
</launch>
